数字图像处理报告要求：
1. Title
2. Objective of the laboratory and the basic principle of the algorithms.
3. Derivation of your formula, if any.
4. Pseudo code of the algorithm, if the algorithm is not a straightforward computing. 
5. Python codes.要有代码效率和时间复杂度分析 (citing the most important codes in your report if they are necessary for your 
explanation, and submitting the entire code as a separated attachment)
6. Results, including images (included in the report, and meanwhile submitting a separated 
attachment), tables, data, figures, if any.
7. Other (comparison) algorithms if any.
8. Analysis and conclusions



    process(a_in, b_in, a_reg, b_reg, pp_reg)
    begin
        
        if(n = 0) then
            bv(0) <= (others => b_in(0));
            bp(0) <= padding(n-1 downto 0) & (bv(0) and a_in);
            pp_next(0) <= bp(0);
            a_next(0) <= a_in;
            b_next(0) <= b_in;
            
        elsif (n = 1) then
            bv(1) <= (others => b_in(1));
            bp(1) <= padding(n-1 downto 0) & (bv(1) and a_reg(1)) & "0";
            pp_next(1) <= pp_reg(0) + bp(1);
            a_next(1) <= a_reg(0);
            b_next(1) <= b_reg(0);
            
    
        else
            bv(0) <= (others => b_in(0));
            bp(0) <= padding(n-1 downto 0) & (bv(0) and a_in);
            pp_next(0) <= bp(0);
            a_next(0) <= a_in;
            b_next(0) <= b_in;
            
            for i in 1 to (n - 2) loop
                bv(i) <= (others => b_reg(i)(i));
                bp(i) <= padding(n-i-1 downto 0) & (bv(i) and a_reg(i)) & padding(i-1 downto 0);
                pp_next(i) <= pp_reg(i-1) + bp(i);
                a_next(i+1) <= a_reg(i);
                b_next(i+1) <= b_reg(i);
            end loop;
            
            bv(n-1) <= (others => b_reg(n-1)(n-1));
            bp(n-1) <= "0" & (bv(n-1) and a_reg(n-1)) & padding(n-2 downto 0);
            pp_next(n-1) <= pp_reg(n-2) + bp(n-1);
        end if;
        
    end process;
    y <= pp_reg(n-1);